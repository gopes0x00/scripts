# Source: https://tanmay-bhat.github.io/posts/multiple-aws-profile-zsh/
# AWS configuration
export AWS_REGION=$(cat ~/.aws/config | grep sso_region | awk -F= '{print $2}' | xargs)
export AWS_CA_BUNDLE=/PATH/TO/CA_BUNDLE

function aws_ps1() {
  local profile_color="%{$(tput setaf 6)%}"  # Cyan color
  local region_color="%{$(tput setaf 2)%}"   # Green color
  local reset_color="%{$(tput sgr0)%}"      # Reset color
  echo -en "($profile_color$AWS_PROFILE$reset_color:$region_color$AWS_REGION$reset_color)"
}

function aws_profiles() {
  profiles=$(aws --no-cli-pager configure list-profiles 2> /dev/null)
  if [[ -z "$profiles" ]]; then
    echo "No AWS profiles found in '$HOME/.aws/config, check if ~/.aws/config exists and properly configured.'"
    return 1
  else
    echo $profiles
  fi
}

# AWS profiles autocomplete
_aws_profile_completions() {
    COMPREPLY=($(compgen -W "$(aws_profiles)" "${COMP_WORDS[1]}"))
}
complete -F _aws_profile_completions aws_login

function aws_login() {
  available_profiles=$(aws_profiles)
  if [[ -z "$1" ]]; then
    unset AWS_DEFAULT_PROFILE AWS_PROFILE
    echo "Zero argument provided, AWS profile cleared."
    return
  fi

  echo "$available_profiles" | grep -qw "$1"
  if [[ $? -ne 0 ]]; then
    echo "Profile '$1' not configured in '$HOME/.aws/config'.\n"
    echo "Available profiles: \n$available_profiles\n"
    return 1
  else
    export AWS_DEFAULT_PROFILE="$1" AWS_PROFILE="$1"
    aws sso login
    export PS1="$(aws_ps1)"$DEFAULT_PS1
  fi
}

# General
# Default PS1
DEFAULT_PS1=$PS1
